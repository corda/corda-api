package @org.osgi.annotation.bundle.Export net.corda.v5.ledger.consensual {

  @net.corda.v5.base.annotations.DoNotImplement public interface ConsensualLedgerService {
    method @NonNull @net.corda.v5.base.annotations.Suspendable public net.corda.v5.ledger.consensual.transaction.ConsensualTransactionBuilder createTransactionBuilder();
    method @NonNull @net.corda.v5.base.annotations.Suspendable public net.corda.v5.ledger.consensual.transaction.ConsensualSignedTransaction finalize(@NonNull net.corda.v5.ledger.consensual.transaction.ConsensualSignedTransaction, @NonNull List<FlowSession>);
    method @Nullable @net.corda.v5.base.annotations.Suspendable public net.corda.v5.ledger.consensual.transaction.ConsensualLedgerTransaction findLedgerTransaction(@NonNull net.corda.v5.crypto.SecureHash);
    method @Nullable @net.corda.v5.base.annotations.Suspendable public net.corda.v5.ledger.consensual.transaction.ConsensualSignedTransaction findSignedTransaction(@NonNull net.corda.v5.crypto.SecureHash);
    method @NonNull @net.corda.v5.base.annotations.Suspendable public net.corda.v5.ledger.consensual.transaction.ConsensualSignedTransaction receiveFinality(@NonNull net.corda.v5.application.messaging.FlowSession, @NonNull net.corda.v5.ledger.consensual.transaction.ConsensualTransactionValidator);
  }

  @net.corda.v5.base.annotations.CordaSerializable public interface ConsensualState {
    method @NonNull public List<PublicKey> getParticipants();
    method public void verify(@NonNull net.corda.v5.ledger.consensual.transaction.ConsensualLedgerTransaction);
  }

}

package @org.osgi.annotation.bundle.Export net.corda.v5.ledger.consensual.transaction {

  @net.corda.v5.base.annotations.DoNotImplement public interface ConsensualLedgerTransaction {
    method @NonNull public net.corda.v5.crypto.SecureHash getId();
    method @NonNull public Set<PublicKey> getRequiredSignatories();
    method @NonNull public List<ConsensualState> getStates();
    method @NonNull public Instant getTimestamp();
  }

  @net.corda.v5.base.annotations.CordaSerializable @net.corda.v5.base.annotations.DoNotImplement public interface ConsensualSignedTransaction extends net.corda.v5.ledger.common.transaction.TransactionWithMetadata {
    method @NonNull public List<DigitalSignatureAndMetadata> getSignatures();
    method @NonNull public net.corda.v5.ledger.consensual.transaction.ConsensualLedgerTransaction toLedgerTransaction();
  }

  @net.corda.v5.base.annotations.DoNotImplement public interface ConsensualTransactionBuilder {
    method @NonNull public List<ConsensualState> getStates();
    method @NonNull @net.corda.v5.base.annotations.Suspendable public net.corda.v5.ledger.consensual.transaction.ConsensualSignedTransaction toSignedTransaction();
    method @NonNull public net.corda.v5.ledger.consensual.transaction.ConsensualTransactionBuilder withStates(net.corda.v5.ledger.consensual.ConsensualState...);
  }

  public interface ConsensualTransactionValidator {
    method @net.corda.v5.base.annotations.Suspendable public void checkTransaction(@NonNull net.corda.v5.ledger.consensual.transaction.ConsensualLedgerTransaction);
  }

}


package @org.osgi.annotation.bundle.Export net.corda.v5.serialization {

  public class MissingSerializerException {
    ctor public MissingSerializerException(@NonNull String, @NonNull String);
    ctor public MissingSerializerException(@NonNull String, @NonNull List<String>);
    method @Nullable public String getTypeDescriptor();
    method @NonNull public List<String> getTypeNames();
  }

  public class MissingSerializerExceptionJavaApiTest {
    ctor public MissingSerializerExceptionJavaApiTest();
    method public void getMessage();
    method public void getTypeDescriptor();
    method public void getTypeNames();
  }

  public interface SerializationCustomSerializer<OBJ, PROXY> {
    method @NonNull public OBJ fromProxy(@NonNull PROXY);
    method @NonNull public PROXY toProxy(@NonNull OBJ);
  }

  public class SerializationCustomSerializerJavaApiTest {
    ctor public SerializationCustomSerializerJavaApiTest();
    method public void fromProxy();
    method public void toProxy();
  }

  @net.corda.v5.base.annotations.CordaSerializable @net.corda.v5.base.annotations.DoNotImplement public interface SerializedBytes<T> {
    method @NonNull public byte[] getBytes();
  }

  public interface SingletonSerializeAsToken {
    method @NonNull public default String getTokenName();
  }

}

package @org.osgi.annotation.bundle.Export net.corda.v5.serialization.annotations {

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.CLASS) public @interface CordaSerializationTransformEnumDefault {
    method public abstract String newName();
    method public abstract String oldName();
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.CLASS) public @interface CordaSerializationTransformEnumDefaults {
    method public abstract net.corda.v5.serialization.annotations.CordaSerializationTransformEnumDefault[] value();
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.CLASS) public @interface CordaSerializationTransformRename {
    method public abstract String from();
    method public abstract String to();
  }

  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.CLASS) public @interface CordaSerializationTransformRenames {
    method public abstract net.corda.v5.serialization.annotations.CordaSerializationTransformRename[] value();
  }

}


<?xml version='1.0' encoding='UTF-8'?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>ComplexMethod:Amount.kt$AmountTransfer$ override fun equals(other: Any?): Boolean</ID>
    <ID>ForbiddenComment:Contracts.kt$Contract$* Implemented by a program that implements business logic on the shared ledger. All participants run this code for * every [net.corda.core.transactions.LedgerTransaction] they see on the network, for every input and output state. All * contracts must accept the transaction for it to be accepted: failure of any aborts the entire thing. The time is taken * from a trusted time-window attached to the transaction itself i.e. it is NOT necessarily the current time. * * TODO: Contract serialization is likely to change, so the annotation is likely temporary.</ID>
    <ID>ForbiddenComment:TransactionUtils.kt$// TODO: add link to docsite page, when there is one.</ID>
    <ID>ForbiddenComment:TransactionVerificationException.kt$TransactionVerificationException$// TODO: Make this descend from TransactionVerificationException so that untrusted attachments cause flows to be hospitalized.</ID>
    <ID>ForbiddenComment:TransactionVerificationException.kt$TransactionVerificationException.TransactionRequiredContractUnspecifiedException$// TODO: add reference to documentation</ID>
    <ID>MatchingDeclarationName:ContractsDSL.kt$Requirements</ID>
    <ID>NestedBlockDepth:Amount.kt$Amount.Companion$ @JvmStatic fun parseCurrency(input: String): Amount&lt;Currency></ID>
    <ID>TooGenericExceptionCaught:Amount.kt$Amount.Companion$e: Exception</ID>
    <ID>TooManyFunctions:LedgerTransaction.kt$LedgerTransaction : FullTransaction</ID>
    <ID>TooManyFunctions:LedgerTransaction.kt$net.corda.v5.ledger.obsolete.transactions.LedgerTransaction.kt</ID>
    <ID>TooManyFunctions:TransactionBuilder.kt$TransactionBuilder</ID>
  </CurrentIssues>
</SmellBaseline>

Corda-Contract-Classes=IMPLEMENTS;net.corda.v5.ledger.contracts.Contract
Corda-Flow-Classes=IMPLEMENTS;net.corda.v5.application.flows.Flow
Corda-SerializationCustomSerializer-Classes=IMPLEMENTS;net.corda.v5.serialization.SerializationCustomSerializer
Corda-JsonSerializer-Classes=IMPLEMENTS;net.corda.v5.application.marshalling.json.JsonSerializer
Corda-JsonDeserializer-Classes=IMPLEMENTS;net.corda.v5.application.marshalling.json.JsonDeserializer
Corda-CheckpointCustomSerializer-Classes=IMPLEMENTS;net.corda.v5.serialization.CheckpointCustomSerializer
Corda-NotaryPluginProvider-Classes=IMPLEMENTS;net.corda.v5.ledger.notary.plugin.api.PluggableNotaryClientFlowProvider
Corda-StateAndRefPostProcessor-Classes=IMPLEMENTS;net.corda.v5.ledger.services.vault.StateAndRefPostProcessor
Corda-CustomQueryPostProcessor-Classes=IMPLEMENTS;net.corda.v5.application.persistence.query.CustomQueryPostProcessor
Corda-DigestAlgorithmFactory-Classes=IMPLEMENTS;net.corda.v5.crypto.extensions.DigestAlgorithmFactory
Corda-Entity-Classes=ANNOTATED;javax.persistence.Entity;ANNOTATED;net.corda.v5.base.annotations.CordaSerializable
Corda-ClientStartableFlow-Classes=IMPLEMENTS;net.corda.v5.application.flows.ClientStartableFlow
Corda-InitiatedFlow-Classes=IMPLEMENTS;net.corda.v5.application.flows.ResponderFlow
Corda-Subflow-Classes=IMPLEMENTS;net.corda.v5.application.flows.Subflow
Corda-Token-Observer-Classes=IMPLEMENTS;net.corda.v5.ledger.utxo.observer.UtxoLedgerTokenStateObserver
Corda-Ledger-CustomQuery-Classes=IMPLEMENTS;net.corda.v5.ledger.utxo.query.VaultNamedQueryFactory

# Corda should adjust this version over time, as required.
Minimum-Corda-Plugins-Version=7.0.0

# CorDapps must always import these packages so that Corda can
# still create lazy JPA proxies within the OSGi framework.
Required-Packages=org.hibernate.annotations,\
    org.hibernate.proxy

# The OSGi "consumer policy" for Corda's API packages.
Import-Policy-Packages=net.corda.v5.*

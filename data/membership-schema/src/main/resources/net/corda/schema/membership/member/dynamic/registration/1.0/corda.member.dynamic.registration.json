{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://corda.r3.com/net/corda/schema/membership/member/dynamic/registration/1.0/corda.member.dynamic.registration.json",
  "title": "Corda dynamic member registration context schema",
  "type": "object",
  "description": "Definition of the registration context required for registering a member in a dynamic group.",
  "patternProperties": {
    "^corda.endpoints.[0-9]+.connectionURL$": {
      "description": "The P2P connection URL. Can be multiple specified by index.",
      "type": "string"
    },
    "^corda.endpoints.[0-9]+.protocolVersion$": {
      "description": "The P2P URL protocol version. Can be multiple specified by index.",
      "type": "string"
    },
    "^corda.roles.[0-9]+$": {
      "description": "The member roles. Can be multiple specified by index.",
      "type": "string",
      "enum": ["notary"],
      "examples": [
        "notary"
      ]
    },
    "^corda.notary.keys.[0-9]+.id$": {
      "description": "The notary public key IDs which should be used for notary signing. Can be multiple specified by index.",
      "type": "string"
    },
    "^corda.notary.keys.[0-9]+.signature.spec$": {
      "description": "Optional. The notary public key signature spec. Can be multiple specified by index.",
      "type": "string"
    },
    "^corda.ledger.keys.[0-9]+.id$": {
      "description": "The ledger public key IDs which should be used for ledger signing. Can be multiple specified by index.",
      "type": "string"
    },
    "^corda.ledger.keys.[0-9]+.signature.spec$": {
      "description": "Optional. The ledger public key signature spec. Can be multiple specified by index.",
      "type": "string"
    },
    "^ext\\.[a-zA-Z0-9\\.]+$": {
      "description": "Optional. A user can specify additional properties, they must be prefixed with `ext.`",
      "type": "string",
      "maxLength": 256
    }
  },
  "properties": {
    "corda.session.key.id": {
      "description": "The session public key ID which should be used for session initiation.",
      "type": "string"
    },
    "corda.session.key.signature.spec": {
      "description": "Optional. The session key signature spec.",
      "type": "string"
    },
    "corda.notary.service.name": {
      "description": "The notary service X500 name. Valid only when one of the roles is notary.",
      "type": "string",
      "minLength": 3,
      "examples": [
        "O=NotaryService, L=London, C=GB"
      ]
    },
    "corda.notary.service.plugin": {
      "description": "The notary plugin type (FQN of notary service plugin class). Valid only when one of the roles is notary.",
      "type": "string",
      "maxLength": 255,
      "examples": [
        "net.corda.notary.MyNotaryService"
      ]
    },
    "corda.auth.token": {
      "description": "Optional. A UUID string that uniquely identifies the pre-auth token.",
      "type": "string",
      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[1-5][a-fA-F0-9]{3}-[89aAbB][a-fA-F0-9]{3}-[a-fA-F0-9]{12}$"
    }
  },
  "required": [
    "corda.session.key.id"
  ],
  "additionalProperties": false
}

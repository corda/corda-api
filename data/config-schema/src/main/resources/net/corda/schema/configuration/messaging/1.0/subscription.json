{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "https://corda.r3.com/net/corda/schema/configuration/messaging/1.0/subscription.json",
  "title": "Common subscription configuration",
  "description": "Configuration settings for all subscriptions to the message bus.",
  "type": "object",
  "properties": {
    "pollTimeout": {
      "description": "The length of time in milliseconds that Corda waits for a response from the bus when calling poll.",
      "type": "integer",
      "minimum": 100,
      "maximum": 2147483647,
      "default": 500
    },
    "threadStopTimeout": {
      "description": "The length of time in milliseconds that Corda waits for the subscription processing thread to terminate on close.",
      "type": "integer",
      "minimum": 100,
      "maximum": 2147483647,
      "default": 10000
    },
    "processorRetries": {
      "description": "The number of times Corda retries internal intermittent failures before throwing back to the client.",
      "type": "integer",
      "minimum": 0,
      "maximum": 1000,
      "default": 3
    },
    "subscribeRetries": {
      "description": "The number of times Corda attempts to subscribe to the underlying bus before throwing back to the client.",
      "type": "integer",
      "minimum": 0,
      "maximum": 1000,
      "default": 3
    },
    "commitRetries": {
      "description": "The number of times Corda attempts to commit a transaction before throwing back to the client.",
      "type": "integer",
      "minimum": 0,
      "maximum": 1000,
      "default": 3
    },
    "processorTimeout": {
      "description": "The length of time in milliseconds that Corda waits for an individual event to process. This is applied if the subscription must also maintain a state that needs to be periodically serviced. If using KAFKA as the message bus. This value needs to be set lower than the kafka consumer max.poll.interval.ms config value.",
      "type": "integer",
      "minimum": 1000,
      "maximum": 2147483647,
      "default": 15000
    },
    "mediator": {
      "description": "Settings for the multi source mediator",
      "type": "object",
      "default": {},
      "properties": {
        "poolSize": {
          "description": "The size of the mediator event processing pool size.",
          "type": "integer",
          "minimum": 1,
          "maximum": 2147483647,
          "default": 8
        },
        "minPoolRecordCount": {
          "description": "The minimum number of events in a single mediator processing pool. If the number of records polled is less than this, then the polled records are used in a single pool.",
          "type": "integer",
          "minimum": 1,
          "maximum": 2147483647,
          "default": 20
        },
        "pollTimeout": {
          "description": "The length of time in milliseconds that the mediator pattern consumers wait for a response from the bus when calling poll.",
          "type": "integer",
          "minimum": 10,
          "maximum": 2147483647,
          "default": 50
        },
        "processorTimeout": {
          "description": "The length of time in milliseconds the mediator will wait for a single group of events to process. This value should be set to less than the consumer max.poll.interval.ms config value, which by default is 5 minutes.",
          "type": "integer",
          "minimum": 1000,
          "maximum": 2147483647,
          "default": 120000
        },
        "transientErrorRetryTimeout": {
          "description": "The length of time in milliseconds the mediator will allow an inter-worker RPC call to return transient errors before marking the state as failed. A retry topic is used to persist retries across multiple consumer polls.",
          "type": "integer",
          "minimum": 1000,
          "maximum": 2147483647,
          "default": 1200000
        }
      }
    }
  },
  "additionalProperties": false
}
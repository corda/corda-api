{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://corda.r3.com/net/corda/schema/configuration/cryptoLibrary/1.0/corda.cryptoLibrary.json",
  "title": "Corda Crypto Library Configuration Schema",
  "description": "Configuration schema for the crypto library subsection.",
  "type": "object",
  "properties": {
    "rootKey": {
      "description": "Encryptor parameters (salt/passphrase) which are used to encrypt the HSM configurations.",
      "type": "object",
      "properties": {
        "salt": {
          "type": "string"
        },
        "passphrase": {
          "description": "Secret value with Encryptor's passphrase.",
          "type": "object",
          "properties": {
            "configSecret": {
              "type": "object",
              "properties": {
                "encryptedSecret": {
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "required": [
                "encryptedSecret"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "configSecret"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "salt",
        "passphrase"
      ]
    },
    "softPersistence": {
      "description": "Settings used by SOFT HSM.",
      "type": "object",
      "properties": {
        "expireAfterAccessMins": {
          "description": "Item's expiration time in minutes after accessing it in the wrapping key cache.",
          "type": "integer",
          "minimum": 0,
          "default": 240
        },
        "maximumSize": {
          "description": "Maximum number of items in the wrapping key cache.",
          "type": "integer",
          "minimum": 0,
          "default": 1000
        },
        "maxAttempts": {
          "description": "Maximum number of attempts to call the SOFT HSM, that value is copied to the corresponding HSM configuration.",
          "type": "integer",
          "minimum": 1,
          "default": 1
        },
        "attemptTimeoutMills": {
          "description": "Timeout in milliseconds for each attempt when calling the SOFT HSM, it should be kept fairly big as RSA key generation may take a few seconds in a shared computing environment, that value is copied to the corresponding HSM configuration.",
          "type": "integer",
          "minimum": 2000,
          "default": 20000
        },
        "salt": {
          "description": "Salt to be used to derive the global master key to encrypt all other wrapping key used by SOFT HSM.",
          "type": "string"
        },
        "passphrase": {
          "description": "Secret value with passphrase to be used to derive the global master key to encrypt all other wrapping key used by SOFT HSM.",
          "type": "object",
          "properties": {
            "configSecret": {
              "type": "object",
              "properties": {
                "encryptedSecret": {
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "required": [
                "encryptedSecret"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "configSecret"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "salt",
        "passphrase"
      ]
    },
    "signingPersistence": {
      "description": "Settings used by signing service persistence layer.",
      "type": "object",
      "properties": {
        "keysExpireAfterAccessMins": {
          "description": "Item's expiration time in minutes after accessing it in the key metadata cache, the cache is created per tenant.",
          "type": "integer",
          "minimum": 0,
          "default": 90
        },
        "keyNumberLimit": {
          "description": "Maximum number of items in the key metadata cache, the cache is created per tenant.",
          "type": "integer",
          "minimum": 0,
          "default": 20
        },
        "vnodesExpireAfterAccessMins": {
          "description": "Item's expiration time in minutes after accessing it in the tenant's cache.",
          "type": "integer",
          "minimum": 0,
          "default": 120
        },
        "vnodeNumberLimit": {
          "description": "Maximum number of items in the key tenant's  cache.",
          "type": "integer",
          "minimum": 0,
          "default": 100
        },
        "connectionsExpireAfterAccessMins": {
          "description": "Item's expiration time in minutes after accessing it in the database connection cache.",
          "type": "integer",
          "minimum": 0,
          "default": 15
        },
        "connectionNumberLimit": {
          "description": "Maximum number of items in the database connection cache.",
          "type": "integer",
          "minimum": 0,
          "default": 2
        }
      },
      "additionalProperties": false
    },
    "hsmPersistence": {
      "description": "Settings used by HSM configuration persistence layer.",
      "type": "object",
      "properties": {
        "expireAfterAccessMins": {
          "description": "Item's expiration time in minutes after accessing it in the cache.",
          "type": "integer",
          "minimum": 0,
          "default": 240
        },
        "maximumSize": {
          "description": "Maximum number of items in the cache.",
          "type": "integer",
          "minimum": 0,
          "default": 1000
        },
        "downstreamMaxAttempts": {
          "description": "Maximum number of attempts when calling downstream services, like creating wrapping key on configuring new HSM.",
          "type": "integer",
          "minimum": 3,
          "default": 3
        }
      },
      "additionalProperties": false
    },
    "bus": {
      "description": "Settings used by components handling messaging.",
      "type": "object",
      "properties": {
        "processors": {
          "description": "Settings used by service side components handling messaging.",
          "type": "object",
          "properties": {
            "ops": {
              "description": "Settings used by crypto ops message processor.",
              "type": "object",
              "properties": {
                "maxAttempts": {
                  "description": "Maximum number of attempts to call.",
                  "type": "integer",
                  "minimum": 1,
                  "default": 3
                },
                "waitBetweenMills": {
                  "description": "Wait in between for each attempt, if the array size less than number of attempts then the last value is repeated for consequent waits.",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "minItems": 1,
                  "default": [200]
                }
              },
              "additionalProperties": false
            },
            "flow": {
              "description": "Settings used by flow ops message processor.",
              "type": "object",
              "properties": {
                "maxAttempts": {
                  "description": "Maximum number of attempts to call.",
                  "type": "integer",
                  "minimum": 1,
                  "default": 3
                },
                "waitBetweenMills": {
                  "description": "Wait in between for each attempt, if the array size less than number of attempts then the last value is repeated for consequent waits.",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "minItems": 1,
                  "default": [200]
                }
              },
              "additionalProperties": false
            },
            "config": {
              "description": "Settings used by HSM config message processor.",
              "type": "object",
              "properties": {
                "maxAttempts": {
                  "description": "Maximum number of attempts to call.",
                  "type": "integer",
                  "minimum": 1,
                  "default": 3
                },
                "waitBetweenMills": {
                  "description": "Wait in between for each attempt, if the array size less than number of attempts then the last value is repeated for consequent waits.",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "minItems": 1,
                  "default": [200]
                }
              },
              "additionalProperties": false
            },
            "registration": {
              "description": "Settings used by HSM registration message processor.",
              "type": "object",
              "properties": {
                "maxAttempts": {
                  "description": "Maximum number of attempts to call.",
                  "type": "integer",
                  "minimum": 1,
                  "default": 3
                },
                "waitBetweenMills": {
                  "description": "Wait in between for each attempt, if the array size less than number of attempts then the last value is repeated for consequent waits.",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "minItems": 1,
                  "default": [200]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "required": [
            "ops",
            "flow",
            "config",
            "registration"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "processors"
      ]
    }
  },
  "additionalProperties": false,
  "required": [
    "rootKey",
    "softPersistence",
    "signingPersistence",
    "hsmPersistence",
    "bus"
  ]
}
{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "https://corda.r3.com/net/corda/schema/configuration/ledger/utxo/1.0/corda.ledger.utxo.json",
  "title": "Corda UTXO ledger Configuration Schema",
  "description": "Configuration schema for the UTXO ledger.",
  "type": "object",
  "default": {},
  "properties": {
    "tokens": {
      "description": "Settings for token selection",
      "type": "object",
      "default": {},
      "properties": {
        "minDelayBeforeNextFullSync": {
          "description": "The minimum amount of time Corda waits before starting another full token cache synchronization, in seconds.",
          "type": "integer",
          "minimum": 0,
          "default": 300
        },
        "minDelayBeforeNextPeriodicSync": {
          "description": "The minimum amount of time Corda waits before starting another periodic cache synchronization, in seconds.",
          "type": "integer",
          "minimum": 0,
          "default": 30
        },
        "fullSyncBlockSize": {
          "description": "The number of records per synchronization message during a full token cache synchronization.",
          "type": "integer",
          "minimum": 100,
          "default": 1000
        },
        "periodCheckBlockSize": {
          "description": "The number of state references per synchronization message during a periodic token cache synchronization check.",
          "type": "integer",
          "minimum": 100,
          "default": 5000
        },
        "sendWakeUpMaxRetryAttempts": {
          "description": "The maximum number of attempts to send the synchronization wake-up messages on component start.",
          "type": "integer",
          "minimum": 0,
          "default": 6
        },
        "sendWakeUpMaxRetryDelay": {
          "description": "The maximum delay before a retry is scheduled, in seconds",
          "type": "integer",
          "minimum": 1,
          "default": 10
        },
        "cachedTokenPageSize": {
          "description": "The page size of the query that retrieves tokens from the database",
          "type": "integer",
          "minimum": 0,
          "default": 1500
        },
        "claimTimeoutSeconds": {
          "description": "Time in seconds before the claim will be automatically released (default 10 minutes)",
          "type": "integer",
          "minimum": 1,
          "default": 600
        },
        "tokenCacheExpiryPeriodMilliseconds": {
          "description": "Expiry period in milliseconds for token in the cache (default 10 minutes). A zero value means the cached tokens expire instantly",
          "type": "integer",
          "minimum": 0,
          "default": 600000
        },
        "dbTokensFetchMinIntervalInMillis": {
          "description": "Minimum backoff period in milliseconds for db calls that do not fulfill a token claim request (default half second)",
          "type": "integer",
          "minimum": 1,
          "default": 500
        },
        "dbTokensFetchMaxIntervalInMillis": {
          "description": "Maximum backoff period in milliseconds for db calls that do not fulfill a token claim request (default 1 minute)",
          "type": "integer",
          "minimum": 1,
          "default": 60000
        }
      }
    },
    "backchain": {
      "description": "Settings for backchain resolution",
      "type": "object",
      "default": {},
      "properties": {
        "batchSize": {
          "description": "Maximum size of each batch when doing a backchain resolution.",
          "type": "integer",
          "minimum": 1,
          "default": 10
        }
      }
    }
  }
}
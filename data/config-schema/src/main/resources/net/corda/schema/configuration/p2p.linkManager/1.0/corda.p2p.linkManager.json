{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "https://corda.r3.com/net/corda/schema/configuration/p2p/1.0/corda.p2p.linkmanager.json",
  "title": "Corda P2P Link Manager Configuration Schema",
  "description": "Configuration schema for the P2P link manager.",
  "type": "object",
  "properties": {
    "maxMessageSize": {
      "description": "The maximum message size in bytes.",
      "type": "integer",
      "default": 1000000,
      "minimum": 1000
    },
    "replayAlgorithm": {
      "description": "The algorithm used to schedule messages for replay.",
      "type": "object",
      "default": {
        "constant": {
          "messageReplayPeriod": 2000
        }
      },
      "properties": {
        "exponentialBackoff": {
          "type": "object",
          "description": "Replay messages with capped exponential backoff.",
          "properties": {
            "baseReplayPeriod": {
              "description": "The message replay period base in milliseconds.",
              "type": "integer",
              "default": 2000,
              "minimum": 500
            },
            "replayPeriodCutoff": {
              "description": "The message replay period cutoff in milliseconds.",
              "type": "integer",
              "default": 10000,
              "minimum": 500
            }
          },
          "additionalProperties": false
        },
        "constant": {
          "type": "object",
          "description": "Replay messages at a constant rate.",
          "properties": {
            "messageReplayPeriod": {
              "description": "The message replay period in milliseconds.",
              "type": "integer",
              "default": 2000,
              "minimum": 500
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "dependencies": {
        "exponentialBackOff": {
          "not": {
            "required": [
              "constant"
            ]
          }
        },
        "constant": {
          "not": {
            "required": [
              "exponentialBackOff"
            ]
          }
        }
      }
    },
    "maxReplayingMessages": {
      "description": "The maximum number of replaying messages between two peers.",
      "type": "integer",
      "default": 100,
      "minimum": 1
    },
    "heartbeatMessagePeriod": {
      "description": "The heartbeat message period in milliseconds. heartbeatMessagePeriodForMgmPeer is used instead when communicating with an MGM.",
      "type": "integer",
      "default": 2000,
      "minimum": 500
    },
    "sessionTimeout": {
      "description": "The session timeout in milliseconds. sessionTimeoutForMgmPeer is used instead when communicating with an MGM.",
      "type": "integer",
      "default": 10000,
      "minimum": 500
    },
    "heartbeatMessagePeriodForMgmPeer": {
      "description": "The heartbeat message period in milliseconds. Used when communicating with an MGM.",
      "type": "integer",
      "default": 60000,
      "minimum": 500
    },
    "sessionTimeoutForMgmPeer": {
      "description": "The session timeout in milliseconds. Used for sessions with an MGM.",
      "type": "integer",
      "default": 300000,
      "minimum": 500
    },
    "sessionsPerPeer": {
      "description": "The number of actively maintained sessions between two peers.",
      "type": "integer",
      "default": 4,
      "minimum": 1
    },
    "revocationCheck": {
      "type": "object",
      "default": {},
      "description": "The type of revocation check for the session certificate.",
      "properties": {
        "mode": {
          "oneOf": [
            {
              "const": "SOFT_FAIL",
              "title": "The revocation check will succeed if the revocation status cannot be determined under certain circumstances. See java.security.cert.PKIXRevocationChecker.Option.SOFT_FAIL java doc for more details."
            },
            {
              "const": "HARD_FAIL",
              "title": "The opposite of SOFT_FAIL. This is the most rigorous check. Amongst other requirements, this check requires that the CRL checking URL is available on every level of certificate chain."
            },
            {
              "const": "OFF",
              "title": "Disables the CRL check."
            }
          ],
          "default": "SOFT_FAIL"
        }
      }
    },
    "sessionRefreshThreshold": {
      "description": "The session refresh threshold in seconds. The default value is five days.",
      "type": "integer",
      "default": 432000,
      "maximum": 432000
    }
  },
  "additionalProperties": false
}
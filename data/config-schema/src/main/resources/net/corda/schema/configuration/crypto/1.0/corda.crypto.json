{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://corda.r3.com/net/corda/schema/configuration/crypto/1.0/corda.crypto.json",
  "title": "Corda Crypto Library Configuration Schema",
  "description": "Configuration schema for the crypto library subsection.",
  "type": "object",
  "properties": {
    "signingService": {
      "description": "Settings for SigningService",
      "type": "object",
      "default": {},
      "properties": {
        "cache": {
          "description": "Settings for key metadata cache",
          "type": "object",
          "default": {},
          "properties": {
            "expireAfterAccessMins": {
              "description": "Expiration time in minutes for cached key metadata",
              "type": "integer",
              "default": 10000
            },
            "maximumSize": {
              "description": "Maximum number of cached key metadata",
              "type": "integer",
              "default": 60
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "busProcessors": {
      "description": "Settings for crypto messages processors",
      "type": "object",
      "default": {},
      "properties": {
        "ops": {
          "description": "Settings for crypto ops messages processor",
          "type": "object",
          "default": {},
          "properties": {
            "maxAttempts": {
              "description": "Maximum attempts to process a message",
              "type": "integer",
              "default": 3
            },
            "waitBetweenMills": {
              "description": "Time between attempts in milliseconds, if the number of values is less than attempts then the last item is repeated",
              "type": "array",
              "minItems": 1,
              "default": [
                200
              ],
              "items": {
                "type": "integer"
              }
            }
          },
          "additionalProperties": false
        },
        "flow": {
          "description": "Settings for crypto flow ops messages processor",
          "type": "object",
          "default": {},
          "properties": {
            "maxAttempts": {
              "description": "Maximum attempts to process a message",
              "type": "integer",
              "default": 3
            },
            "waitBetweenMills": {
              "description": "Time between attempts in milliseconds, if the number of values is less than attempts then the last item is repeated",
              "type": "array",
              "minItems": 1,
              "default": [
                200
              ],
              "items": {
                "type": "integer"
              }
            }
          },
          "additionalProperties": false
        },
        "registration": {
          "description": "Settings for HSM registration messages processor",
          "type": "object",
          "default": {},
          "properties": {
            "maxAttempts": {
              "description": "Maximum attempts to process a message",
              "type": "integer",
              "default": 3
            },
            "waitBetweenMills": {
              "description": "Time between attempts in milliseconds, if the number of values is less than attempts then the last item is repeated",
              "type": "array",
              "minItems": 1,
              "default": [
                200
              ],
              "items": {
                "type": "integer"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "hsm": {
      "description": "Settings and capabilities for the HSM",
      "type": "object",
      "default": {},
      "properties": {
        "retry": {
          "description": "Retry settings for the HSM",
          "type": "object",
          "default": {},
          "properties": {
            "maxAttempts": {
              "description": "Maximum number of attempts",
              "type": "integer",
              "default": 3
            },
            "attemptTimeoutMills": {
              "description": "Wait period in milliseconds between attempts, should be reasonably large as some operations may be long, e.g. RSA key generation by the SOFT HSM may take a few seconds",
              "type": "integer",
              "default": 20000
            }
          },
          "additionalProperties": false
        },
        "name": {
          "description": "HSM provider name",
          "type": "string"
        },
        "categories": {
          "description": "Categories which the HSM can be used for",
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "properties": {
              "category": {
                "description": "Category name, could be the wildcard * meaning all which has to be the last item if used",
                "type": "string"
              },
              "policy": {
                "description": "Defines how private keys are generated for that category, ALIASED - stored in the HSM, WRAPPED - wrapped by the HSM, BOTH - decision is taken by the HSM at runtime",
                "enum": [
                  "ALIASED",
                  "WRAPPED",
                  "BOTH"
                ]
              }
            },
            "required": [
              "category",
              "policy"
            ],
            "additionalProperties": false
          }
        },
        "masterKeyPolicy": {
          "description": "Wrapping key policy, NONE - no wrapping key is required, SHARED - wrapping key shared by all tenants, UNIQUE - wrapping key unique for each tenant",
          "enum": [
            "NONE",
            "SHARED",
            "UNIQUE"
          ]
        },
        "masterKeyAlias": {
          "description": "If the masterKeyPolicy is SHARED then this specifies the alias of the shared key and as such is required",
          "type": "string"
        },
        "capacity": {
          "description": "Number of keys which can be handled by the HSM, -1 means unlimited capacity",
          "type": "integer"
        },
        "supportedSchemes": {
          "description": "Key schemes that are supported by the HSM",
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "cfg": {
          "description": "SOFT HSM specific configuration",
          "type": "object",
          "properties": {
            "keyMap": {
              "description": "Settings for the private keys map",
              "type": "object",
              "default": {},
              "properties": {
                "name": {
                  "description": "Map type, CACHING - the key are cached, TRANSIENT - there is no caching",
                  "enum": [
                    "CACHING",
                    "TRANSIENT"
                  ],
                  "default": "CACHING"
                },
                "cache": {
                  "description": "Settings for the cache if the type is CACHING",
                  "type": "object",
                  "default": {},
                  "properties": {
                    "expireAfterAccessMins": {
                      "description": "Expiration time for cached keys",
                      "type": "integer",
                      "default": 60
                    },
                    "maximumSize": {
                      "description": "Maximum number of keys in the cache",
                      "type": "integer",
                      "default": 1000
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "wrappingKeys": {
              "description" : "Key derivation parameters for wrapping keys supplied in config",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "alias": {
                    "description": "The alias for the wrapping key.",
                    "type": "string"
                  },
                  "algorithm": {
                    "description": "Key derivation function and wrapping key algorithm selection",
                    "type": "string",
                    "default": "PBKDF2WithHmacSHA256"
                  },
                  "salt": {
                    "description": "Salt for the key derivation function",
                    "type": "string"
                  },
                  "passphrase": {
                    "description": "Passphrase for the key derivation function",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "alias",
                  "salt",
                  "passphrase"
                ]
              }
            },
            "defaultWrappingKey": {
              "description": "The default wrapping key, which must be in the wrappingKeys array.",
              "type": "string"
            },
            "wrappingKeyMap": {
              "description": "Settings for the wrapping keys map",
              "type": "object",
              "default": {},
              "properties": {
                "name": {
                  "description": "Map type, CACHING - the key are cached, TRANSIENT - there is no caching",
                  "enum": [
                    "CACHING",
                    "TRANSIENT"
                  ],
                  "default": "CACHING"
                },
                "cache": {
                  "description": "Settings for the cache if the type is CACHING",
                  "type": "object",
                  "default": {},
                  "properties": {
                    "expireAfterAccessMins": {
                      "description": "Expiration time for cached keys",
                      "type": "integer",
                      "default": 60
                    },
                    "maximumSize": {
                      "description": "Maximum number of keys in the cache",
                      "type": "integer",
                      "default": 1000
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "wrapping": {
              "description": "Number of keys which can be handled by the HSM, -1 means unlimited capacity",
              "type": "object",
              "default": {},
              "properties": {
                "name": {
                  "description": "Wrapping type, DEFAULT - the wrapping key are stored in database, HSM - there is additional single master key defined in the HSM",
                  "enum": [
                    "DEFAULT",
                    "HSM"
                  ],
                  "default": "DEFAULT"
                },
                "hsm": {
                  "description": "Number of keys which can be handled by the HSM, -1 means unlimited capacity",
                  "type": "object",
                  "default": {},
                  "properties": {
                    "name": {
                      "description": "HSM provider name",
                      "type": "string"
                    },
                    "cfg": {
                      "description": "HSM specific configuration",
                      "type": "object",
                      "default": {},
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "required": [
        "name",
        "masterKeyPolicy",
        "capacity",
        "supportedSchemes",
        "categories",
        "cfg"
      ],
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}
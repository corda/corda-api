{
  "type": "record",
  "name": "SessionState",
  "namespace": "net.corda.data.flow.state.session",
  "fields": [
    {
      "name": "sessionId",
      "type": "string",
      "doc": "UUID for the session. The initiated party sessionID will have a suffix of `-INITIATED`"
    },
    {
      "name": "isInteropSession",
      "type": "boolean",
      "default": false,
      "doc": "True if this session is an interop session, otherwise false."
    },
    {
      "name": "sessionStartTime",
      "type": {
        "type": "long",
        "logicalType": "timestamp-millis"
      },
      "doc": "Time ([Instant]) in milliseconds when the session was created"
    },
    {
      "name": "lastReceivedMessageTime",
      "type": {
        "type": "long",
        "logicalType": "timestamp-millis"
      },
      "doc": "Time ([Instant]) in milliseconds when the last session event was received from a counterparty"
    },
    {
      "name": "counterpartyIdentity",
      "type": "net.corda.data.identity.HoldingIdentity",
      "doc": "Identity of the counterparty in the session."
    },
    {
      "name": "requireClose",
      "type": "boolean",
      "doc": "True if the user has set requireClose to be true when calling initiate flow. False otherwise."
    },
    {
      "name": "receivedEventsState",
      "type": "net.corda.data.flow.state.session.SessionProcessState",
      "doc": "Record the highest contiguous sequence number received from the counterparty. Record all events received but not yet processed by this party's client code."
    },
    {
      "name": "sendEventsState",
      "type": "net.corda.data.flow.state.session.SessionProcessState",
      "doc": "Record the sequence number of the last event sent to the counterparty. Record all events to be sent to the counterparty."
    },
    {
      "name": "status",
      "type": {
        "type": "enum",
        "name": "SessionStateType",
        "symbols": [
          "CREATED",
          "CONFIRMED",
          "CLOSING",
          "CLOSED",
          "ERROR"
        ]
      },
      "doc": "The status of the session."
    },
    {
      "name": "hasScheduledCleanup",
      "type": "boolean",
      "doc": "Whether the session state has already scheduled a cleanup event with the flow mapper."
    },
    {
      "name": "sessionProperties",
      "type": [
        "null",
        "net.corda.data.KeyValuePairList"
      ],
      "doc": "A map of context properties related to this flow session. This contains information such as protocol name and the version running."
    }
  ]
}

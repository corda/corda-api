{
  "type": "record",
  "name": "SessionState",
  "namespace": "net.corda.data.flow.state.session",
  "fields": [
    {
      "name": "sessionId",
      "type": "string"
    },
    {
      "name": "sessionStartTime",
      "type": "long"
    },
    {
      "name": "lastReceivedMessageTime",
      "type": "long",
      "doc": "Timestamp of the last message received from a counterparty"
    },
    {
      "name": "lastSentMessageTime",
      "type": "long",
      "doc": "Timestamp of the last message sent to a counterparty"
    },
    {
      "name": "counterpartyIdentity",
      "type": "net.corda.data.identity.HoldingIdentity"
    },
    {
      "name": "isInitiator",
      "type": "boolean"
    },
    {
      "name": "receivedEventsState",
      "type": "net.corda.data.flow.state.session.SessionProcessState",
      "doc" : "Record the highest contiguous sequence number received from the counterparty. Record all events received but not yet processed by this party's client code."
    },
    {
      "name": "sendEventsState",
      "type": "net.corda.data.flow.state.session.SessionProcessState",
      "doc" : "Record the sequence number of the last event sent to the counterparty. Record all events sent but not yet acknowledged by the counterparty as well as any messages to send to the counterparty."
    },
    {
      "name": "status",
      "type": {
        "type": "enum",
        "name": "SessionStateType",
        "symbols": [
          "CREATED",
          "CONFIRMED",
          "CLOSING",
          "WAIT_FOR_FINAL_ACK",
          "CLOSED",
          "ERROR"
        ]
      }
    }
  ]
}

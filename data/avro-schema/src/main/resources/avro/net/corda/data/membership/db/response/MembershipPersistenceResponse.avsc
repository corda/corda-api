{
  "type": "record",
  "name": "MembershipPersistenceResponse",
  "namespace": "net.corda.data.membership.db.response",
  "doc": "Internal response envelope for persistence operations over RPC.",
  "fields": [
    {
      "name": "context",
      "type": "net.corda.data.membership.db.response.MembershipResponseContext",
      "doc": "Context for the given request"
    },
    {
      "name": "payload",
      "type": [
        "null",
        "net.corda.data.membership.db.response.query.MemberInfoQueryResponse",
        "net.corda.data.membership.db.response.command.PersistGroupParametersResponse",
        "net.corda.data.membership.db.response.command.PersistApprovalRuleResponse",
        "net.corda.data.membership.db.response.command.DeleteApprovalRuleResponse",
        "net.corda.data.membership.db.response.command.RevokePreAuthTokenResponse",
        "net.corda.data.membership.db.response.query.RegistrationRequestQueryResponse",
        "net.corda.data.membership.db.response.query.RegistrationRequestsQueryResponse",
        "net.corda.data.membership.db.response.query.PersistenceFailedResponse",
        "net.corda.data.membership.db.response.query.UpdateMemberAndRegistrationRequestResponse",
        "net.corda.data.membership.db.response.query.MemberSignatureQueryResponse",
        "net.corda.data.membership.db.response.query.MutualTlsListAllowedCertificatesResponse",
        "net.corda.data.membership.db.response.query.GroupPolicyQueryResponse",
        "net.corda.data.membership.db.response.query.ApprovalRulesQueryResponse",
        "net.corda.data.membership.db.response.query.PreAuthTokenQueryResponse",
        "net.corda.data.membership.db.response.query.StaticNetworkInfoQueryResponse"
      ],
      "doc": "Response payload which depends on the requested operation."
    }
  ]
}